@model IMS_Final_Version2.Models.dbModel.tblLeftPage

@{
    ViewBag.Title = "Receive";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PageId)

       @* <div class="form-group">
    @Html.LabelFor(model => model.InventoryId, "Name of Article", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownList("InventoryId", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.InventoryId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SectorId, "Register Book", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SectorId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SectorId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PreviousBalance, "Balance", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PreviousBalance, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PreviousBalance, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReceivingDate, "Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReceivingDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReceivingDate, "", new { @class = "text-danger" })
        </div>
    </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ReceiveingInfo, "RECEIVED", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReceiveingInfo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReceiveingInfo, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NoOfReceivingArticles, "No. of article", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NoOfReceivingArticles, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoOfReceivingArticles, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
        @Html.LabelFor(model => model.TotalBalance, "Total", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalBalance, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalBalance, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReceivingSerial, "Serial", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReceivingSerial, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReceivingSerial, "", new { @class = "text-danger" })
        </div>
    </div>

        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "IndexWithSectorAndInventoryId", new { sectorId = ViewBag.SectorId, inventoryId = ViewBag.InventoryId}, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
